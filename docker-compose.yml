version: "3"
services:

  portainer:
    container_name: Portainer
    image: portainer/portainer-ce:2.18.4
    networks:
      - lanet
    ports:
      - "${PORTAINER_PORT}:${PORTAINER_PORT}"
    profiles: ["dev"]
    restart: unless-stopped
    volumes:
      - portainer:/data/portainer
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    container_name: Postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    image: postgres:alpine3.18
    networks:
      - lanet
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: unless-stopped
    volumes:
      - postgres:/data/postgres

  pgadmin:
    container_name: pgAdmin4
    image: dpage/pgadmin4:7.5
    profiles: ["dev"]
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - lanet
    restart: unless-stopped

  streamlit:
    container_name: Streamlit
    profiles: ["prd"]
    build:
      context: .
      dockerfile: streamlit.Dockerfile
      args:
        - STREAMLIT_PRD_PORT=$STREAMLIT_PRD_PORT
    volumes:
      - streamlit:/data/streamlit
    ports:
      - "${STREAMLIT_PRD_PORT}:${STREAMLIT_PRD_PORT}"
    depends_on:
      - postgres
    networks:
      - lanet
    restart: unless-stopped

  streamlit_dev:
    container_name: StreamlitDev
    profiles: ["dev"]
    build:
      context: .
      dockerfile: streamlit.dev.Dockerfile
      args:
        - STREAMLIT_DEV_PORT=$STREAMLIT_DEV_PORT
    volumes:
      - streamlitdev:/data/streamlit
      - ../app/:/app
    ports:
      - "${STREAMLIT_DEV_PORT}:${STREAMLIT_DEV_PORT}"
    depends_on:
      - postgres
    networks:
      - lanet

networks:
  lanet:
    driver: bridge

volumes:
  portainer:
  postgres:
  pgadmin:
  streamlit:
  streamlitdev: